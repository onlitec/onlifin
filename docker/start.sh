#!/bin/bash

# Script de inicializa√ß√£o para o container Onlifin
set -e

echo "üöÄ Iniciando Onlifin..."

# Criar diret√≥rios necess√°rios
mkdir -p /var/log/nginx
mkdir -p /var/log/php-fpm
mkdir -p /var/log/php
mkdir -p /var/log/supervisor
mkdir -p /var/www/html/storage/logs
mkdir -p /var/www/html/storage/framework/cache
mkdir -p /var/www/html/storage/framework/sessions
mkdir -p /var/www/html/storage/framework/views
mkdir -p /var/www/html/bootstrap/cache

# Criar diret√≥rios tempor√°rios do Nginx
mkdir -p /var/lib/nginx/tmp/fastcgi
mkdir -p /var/lib/nginx/tmp/proxy
mkdir -p /var/lib/nginx/tmp/scgi
mkdir -p /var/lib/nginx/tmp/uwsgi

# Configurar permiss√µes apenas nos diret√≥rios necess√°rios
chown -R www:www /var/www/html/storage /var/www/html/bootstrap/cache
chmod -R 775 /var/www/html/storage
chmod -R 775 /var/www/html/bootstrap/cache
chown www:www /var/www/html/.env
chmod 666 /var/www/html/.env

# Configurar permiss√µes dos diret√≥rios tempor√°rios do Nginx
chown -R www:www /var/lib/nginx/tmp
chmod -R 755 /var/lib/nginx/tmp

# Garantir que os diret√≥rios de cache do Laravel tenham permiss√µes corretas
chown -R www:www /var/www/html/storage/framework/views
chown -R www:www /var/www/html/storage/framework/cache
chown -R www:www /var/www/html/storage/framework/sessions
chmod -R 775 /var/www/html/storage/framework

# Fun√ß√£o para corrigir permiss√µes (pode ser chamada periodicamente)
fix_permissions() {
    echo "üîß Corrigindo permiss√µes..."
    chown -R www:www /var/www/html/storage
    chmod -R 775 /var/www/html/storage
    chown -R www:www /var/www/html/bootstrap/cache
    chmod -R 775 /var/www/html/bootstrap/cache
    echo "‚úÖ Permiss√µes corrigidas!"
}

# Executar corre√ß√£o de permiss√µes inicial
fix_permissions

# Verificar se o arquivo .env existe, se n√£o, criar a partir do .env.example
if [ ! -f /var/www/html/.env ]; then
    echo "üìù Criando arquivo .env..."
    cp /var/www/html/.env.example /var/www/html/.env
    chown www:www /var/www/html/.env
fi

# Gerar chave da aplica√ß√£o se n√£o existir
if ! grep -q "APP_KEY=base64:" /var/www/html/.env; then
    echo "üîë Gerando chave da aplica√ß√£o..."
    # Usar o comando artisan para gerar a chave
    php /var/www/html/artisan key:generate --force || true
fi

# Aguardar conex√£o com MariaDB
echo "üóÑÔ∏è Conectando ao MariaDB..."
sleep 10
echo "‚úÖ Tentando conectar ao MariaDB..."

# Executar migra√ß√µes
echo "üîÑ Executando migra√ß√µes do banco de dados..."
php /var/www/html/artisan migrate --force || echo "‚ö†Ô∏è Algumas migra√ß√µes falharam, mas continuando..."

# Executar seeders se necess√°rio
echo "üå± Executando seeders..."
php /var/www/html/artisan db:seed --force --class=DefaultAdminSeeder || true

# Limpar e otimizar cache
echo "üßπ Limpando e otimizando cache..."
php /var/www/html/artisan config:clear || true
php /var/www/html/artisan route:clear || true
php /var/www/html/artisan view:clear || true
php /var/www/html/artisan config:cache || true
php /var/www/html/artisan route:cache || true
php /var/www/html/artisan view:cache || true

# Criar link simb√≥lico para storage se n√£o existir
if [ ! -L /var/www/html/public/storage ]; then
    echo "üîó Criando link simb√≥lico para storage..."
    php /var/www/html/artisan storage:link
fi

# Configurar permiss√µes finais apenas nos diret√≥rios necess√°rios
chmod -R 775 /var/www/html/storage
chmod -R 775 /var/www/html/bootstrap/cache

echo "‚úÖ Onlifin inicializado com sucesso!"
echo "üåê Aplica√ß√£o dispon√≠vel em http://localhost"

# Iniciar supervisor
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
